# =========================================================
# CascadingXol SPA on Apache (.htaccess)
# - Forces HTTPS + www
# - Sends bots to Prerender for server-rendered HTML
# - Serves static files directly; SPA fallback to index.html
# =========================================================

# -------------------------
# Core rewrite engine
# -------------------------
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /

  # -------------------------
  # 1) Canonical host: https + www
  # -------------------------
  # If not https OR not www, redirect to https://www.cascadingxol.com/...
  RewriteCond %{HTTPS} !=on [OR]
  RewriteCond %{HTTP_HOST} !^www\.cascadingxol\.com$ [NC]
  RewriteRule ^ https://www.cascadingxol.com%{REQUEST_URI} [L,R=301]

  # -------------------------
  # 2) Prerender for crawlers (server-rendered HTML)
  # -------------------------
  # Mark common bots as is_bot
  SetEnvIfNoCase User-Agent "googlebot|bingbot|yandex|baiduspider|duckduckbot|slurp|facebookexternalhit|twitterbot|linkedinbot|embedly|pinterest|quora|slackbot|whatsapp" is_bot

  # If bot OR old _escaped_fragment_, and not a static asset, proxy to Prerender
  RewriteCond %{ENV:is_bot} =1 [OR]
  RewriteCond %{QUERY_STRING} _escaped_fragment_
  RewriteCond %{REQUEST_URI} !^/assets/ [NC]
  RewriteCond %{REQUEST_URI} !\.(js|css|png|jpg|jpeg|gif|svg|webp|ico|woff|woff2|ttf|txt|xml|pdf)$ [NC]
  RewriteRule ^ https://service.prerender.io/https://www.cascadingxol.com%{REQUEST_URI} [P,L,E=PRERENDER:1]

  # -------------------------
  # 3) Static files first
  # -------------------------
  RewriteCond %{REQUEST_FILENAME} -f [OR]
  RewriteCond %{REQUEST_FILENAME} -d
  RewriteRule ^ - [L]

  # -------------------------
  # 4) SPA fallback
  # -------------------------
  RewriteRule ^ index.html [L]
</IfModule>

# Pass the Prerender token when proxying (requires mod_headers)
<IfModule mod_headers.c>
  RequestHeader set X-Prerender-Token "X-PRERENDER-TOKEN" env=PRERENDER
</IfModule>

# (Optional but recommended) Ensure proxying is permitted (shared hosts usually enable this)
# <IfModule mod_proxy.c>
#   <IfModule mod_proxy_http.c>
#     # nothing needed here explicitly; [P] flag uses mod_proxy_http
#   </IfModule>
# </IfModule>
